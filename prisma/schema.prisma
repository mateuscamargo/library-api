// Prisma schema inferred from controllers

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Author {
  id    String @id @default(uuid())
  name  String
  books Book[]

  @@map("authors")
}

model Genre {
  id    String @id @default(uuid())
  genre String @unique
  book  Book[]

  @@map("genres")
}

model Book {
  id          String  @id @default(uuid())
  title       String
  authorId    String
  genreId     String
  userId      String
  year        Int?
  pages       Int?
  rating      Float?
  synopsis    String?
  cover       String?
  status      String?
  currentPage Int?
  isbn        String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author Author @relation(fields: [authorId], references: [id])
  genre  Genre  @relation(fields: [genreId], references: [id])
  progressLogs ReadingProgress[]

  @@map("books")
}

model ReadingGoal {
  id        String   @id @default(uuid())
  userId    String
  title     String
  unit      String
  current   Int
  target    Int
  period    String   
  color     String?
  bgColor   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reading_goals")

}

model ReadingProgress {
  id        String   @id @default(uuid())
  userId    String
  date      DateTime @default(now())
  pages     Int
  books     Int
  bookId    String?
  book      Book?    @relation(fields: [bookId], references: [id])

  @@map("reading_progress")
}

model Achievement {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  difficulty  String?
  unlocked    Boolean  @default(false)
  unlockedAt  DateTime?
  createdAt   DateTime @default(now())

  @@unique([title, userId])
  @@map("achievements")
}


